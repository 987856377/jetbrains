<templateSet group="other">
  <template name="fornts" value="for ( int i = 0; i &lt; 10; i++){&#10;     new Thread(() -&gt; {&#10;         &#10;     },&quot;Thread- &quot; + i + &quot; -Running: &quot;).start();&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="tts" value="try { TimeUnit.SECONDS.sleep(3); } catch (InterruptedException e) { e.printStackTrace(); }" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="nts" value="new Thread(() -&gt; {&#10;    &#10;},&quot;Thread- local -Running: &quot;).start();" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="td" value="//TODO " description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="psf" value="private static final" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="forjnts" value="for ( int i = 0; i &lt; 10; i++){&#10;     Thread thread = new Thread(() -&gt; {&#10;         &#10;     },&quot;Thread- &quot; + i + &quot; -Running: &quot;);&#10;     thread.start();&#10;     thread.join();&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="des" value="/**&#10;  * @Description: $description$  $params$  $return$&#10;  * @Throws: &#10;  * @Author: xuzhenkui&#10;  * @Date: $date$ $time$&#10;  */" description="添加方法注释" toReformat="false" toShortenFQNames="true">
    <variable name="description" expression="" defaultValue=" " alwaysStopAt="false" />
    <variable name="params" expression="groovyScript(&quot;def result=''; def stop=false; def params=\&quot;${_1}\&quot;.replaceAll('[\\\\[|\\\\]|\\\\s]', '').split(',').toList(); if (params.size()==1 &amp;&amp; (params[0]==null || params[0]=='null' || params[0]=='')) { stop=true; }; if(!stop) { for(i=0; i &lt; params.size(); i++) {result +=((i==0) ? '\\r\\n' : '') + ((i &lt; params.size() - 1) ? '  * @Param: ' + params[i] + '\\r\\n' : '  * @Param: ' + params[i] + '')}; }; return result;&quot;, methodParameters())" defaultValue=" " alwaysStopAt="false" />
    <variable name="return" expression="groovyScript(&quot;def result=''; def data=\&quot;${_1}\&quot;; def stop=false; if(data==null || data=='null' || data=='' || data=='void' ) { stop=true; }; if(!stop) { result += '\\r\\n' + '  * @Return: ' + data; }; return result;&quot;, methodReturnType())" defaultValue=" " alwaysStopAt="false" />
    <variable name="date" expression="date()" defaultValue=" " alwaysStopAt="false" />
    <variable name="time" expression="time()" defaultValue=" " alwaysStopAt="false" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
</templateSet>